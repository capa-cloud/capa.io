<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Capa – Nginx Stack</title>
    <link>https://reactivegroup.github.io/capa.io/blog/cloudstack/nginx/</link>
    <description>Recent content in Nginx Stack on Capa</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 22 May 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://reactivegroup.github.io/capa.io/blog/cloudstack/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Nginx Landscape</title>
      <link>https://reactivegroup.github.io/capa.io/blog/2022/05/22/nginx-landscape/</link>
      <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://reactivegroup.github.io/capa.io/blog/2022/05/22/nginx-landscape/</guid>
      <description>
        
        
        &lt;h2 id=&#34;一nginx-功能&#34;&gt;一、Nginx 功能&lt;/h2&gt;
&lt;h3 id=&#34;a跨域问题&#34;&gt;A、跨域问题&lt;/h3&gt;
&lt;h4 id=&#34;关键字&#34;&gt;关键字：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;OPTIONS预检请求&lt;/li&gt;
&lt;li&gt;CORS跨域校验&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;资料&#34;&gt;资料：&lt;/h4&gt;
&lt;p&gt;跨域中一些ngxin的配置：https://juejin.cn/post/6995374680114741279&lt;/p&gt;
&lt;p&gt;跨域的解释：https://juejin.cn/post/6844903938232156167#heading-46&lt;/p&gt;
&lt;p&gt;CORS：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS&lt;/p&gt;
&lt;h2 id=&#34;二nginx-运维&#34;&gt;二、Nginx 运维&lt;/h2&gt;
&lt;h4 id=&#34;快速部署&#34;&gt;快速部署&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/tasks/run-application/run-stateless-application-deployment/&#34;&gt;https://kubernetes.io/zh/docs/tasks/run-application/run-stateless-application-deployment/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;常用目录&#34;&gt;常用目录&lt;/h4&gt;
&lt;p&gt;配置文件 /etc/nginx/conf.d&lt;/p&gt;
&lt;p&gt;默认日志 /var/logs/nginx&lt;/p&gt;
&lt;p&gt;配置日志 /etc/nginx/logs/&lt;/p&gt;
&lt;h4 id=&#34;常用命令&#34;&gt;常用命令&lt;/h4&gt;
&lt;p&gt;测试：nginx -t&lt;/p&gt;
&lt;p&gt;重启：nginx -s reload&lt;/p&gt;
&lt;p&gt;查看日志：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tail -n 10 xxx.log&lt;/li&gt;
&lt;li&gt;head -n 10 xxx.log&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域名解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/resov.conf&lt;/li&gt;
&lt;li&gt;nslookup
&lt;ul&gt;
&lt;li&gt;apt-get install dnsutils&lt;/li&gt;
&lt;li&gt;nslookup &lt;a href=&#34;http://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;h4 id=&#34;日志&#34;&gt;日志&lt;/h4&gt;
&lt;p&gt;error_log    logs/error_&lt;a href=&#34;http://www.abc.com.log&#34;&gt;www.abc.com.log&lt;/a&gt;    error;&lt;/p&gt;
&lt;h4 id=&#34;proxy&#34;&gt;proxy&lt;/h4&gt;
&lt;p&gt;如果proxy_pass中hostname使用了占位符，需要指定resovler的dns服务器ip&lt;/p&gt;
&lt;h4 id=&#34;参数&#34;&gt;参数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用$arg_xxx来获取get中的参数&lt;/li&gt;
&lt;li&gt;使用$http_xxx来获取header中的参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;header&#34;&gt;header&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;add_header 是当请求从 server 端回来时，Nginx 再往这个 response 里添加一些额外的 reponse header 然后发送给 客户端。&lt;/li&gt;
&lt;li&gt;proxy_set_header 是当请求从客户端发出时，Nginx接收到 request 再往请求里添加一些额外的 request header 然后发送给 服务端。
&lt;ul&gt;
&lt;li&gt;常见的一些需要设置 proxy_set_header 的场景，比如说，有些 server 可能需要验证 Host，这个时候，就可以使用 proxy_set_header 伪造一个 Host 来骗过服务端。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;经验&#34;&gt;经验&lt;/h3&gt;
&lt;h4 id=&#34;proxy-1&#34;&gt;proxy&lt;/h4&gt;
&lt;p&gt;使用resolver指定dns服务器时，hostname要带上 .svc.cluster.local&lt;/p&gt;
&lt;p&gt;可以查看/etc/resov.conf中的dns服务器，来指定nginx的resovler&lt;/p&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;h4 id=&#34;变量名&#34;&gt;变量名：&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/dadonggg/p/7797281.html&#34;&gt;https://www.cnblogs.com/dadonggg/p/7797281.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;代理配置&#34;&gt;代理配置：&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000019894251&#34;&gt;https://segmentfault.com/a/1190000019894251&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;service跨namespace&#34;&gt;service跨namespace：&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1718427&#34;&gt;https://cloud.tencent.com/developer/article/1718427&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
